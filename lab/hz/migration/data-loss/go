#!/usr/bin/env bash
set -e
cleanup() {
    exitCode=$?
    hz download
    hz chart metrics
    exit ${exitCode}
}
trap "cleanup" INT TERM EXIT

hzVersion=${1:-$(hazelcastVersion)}
size=${2:-"M4C4"}
user=${2:-ec2-user}

ops="-Dhazelcast.enterprise.license.key=${HAZELCAST_EE_KEY}"
hz memberOps "-Xms2G -Xmx2G ${ops}"
hz clientOps "-Xms400M -Xmx400M ${ops}"
hz cluster -size ${size} -v ${hzVersion} -ee -boxes a.box -user ${user}

hz run load
hz run validate

hz driver Client
hz run get &
sleep 30
hz driver Member
hz submit get
sleep 30
for i in {1..175}; do
    n=$(hz rand -min 1 -max 5)
    hz bounce -iterationDelay 5 -restartDelay 5 Member${n}
    hz driver Member${n}
    hz submit get
    hz check
done

hz run validate




##!/usr/bin/env bash
#set -e
#cleanup() {
#    exitCode=$?
#    hz download
#    hz chart metrics
#    exit ${exitCode}
#}
#trap "cleanup" INT TERM EXIT

#hzVersion=${1:-$(hazelcastVersion)}

#ops="-Dhazelcast.enterprise.license.key=${HAZELCAST_EE_KEY}"
#hz memberOps "-Xms2G -Xmx2G ${ops}"
#hz clientOps "-Xms400M -Xmx400M ${ops}"
#hz cluster -size M4C4 -v ${hzVersion} -ee -boxes a.box

#hz run load
#hz run validate
#hz run get &
#hz bounce -iterations 175  -iterationDelay 5 -restartDelay 5 RandomMember
#hz run validate
