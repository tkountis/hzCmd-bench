#!/usr/bin/env bash
set -e
cleanup() {
    exitCode=$?
    hz download
    hz chart metrics
    exit ${exitCode}
}
trap "cleanup" INT TERM EXIT

hzVersion=${1:-$(hazelcastVersion)}

ops="$ops -Dhazelcast.enterprise.license.key=${HAZELCAST_EE_KEY}"
ops="$ops -Dhazelcast.backpressure.enabled=true"
ops="$ops -ea"

mOps="$mOps -Dhazelcast.hotrestart.gc.stuck.detect.threshold=10000"
mOps="$mOps -Dhazelcast.hotrestart.free.native.memory.percentage=15"

hz memberOps "-Xms4G -Xmx4G ${ops} ${mOps}"
hz cluster -size M4 -id HZ -v ${hzVersion} -ee -boxes a.box -user ec2-user

hz driver 'Member'
hz run load
hz run validate

for i in {1..4}; do

    until hz run clusterSafe; do
      sleep 5
    done

    hz run clusterShutdown
    hz embeddedRestart 'Member(1|2|3)'
    hz driver 'Member(1|2|3)'
    hz run validate

    until hz run clusterSafe; do
      sleep 5
    done

    hz run clusterShutdown
    hz embeddedRestart 'Member(1|2)'
    hz driver 'Member(1|2)'
    hz run validate

    until hz run clusterSafe; do
      sleep 5
    done

    hz run clusterShutdown
    hz embeddedRestart 'Member1'
    hz driver 'Member1'
    hz run validate

    hz bash -jvmId 'Member(2|3|4)' rm -r /home/ec2-user/hot-junk
    hz embeddedRestart 'Member2'
    hz run validate
    hz embeddedRestart 'Member(3|4)'
    hz run validate

    until hz run clusterSafe; do
      sleep 5
    done

    hz run clusterShutdown
    hz embeddedRestart 'Member'
    hz run validate

done